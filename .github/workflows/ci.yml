name: fast-ci

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - run: npm run ci
      - run: npm run lint || true

  grype:
    name: Grype
    runs-on: ubuntu-latest
    needs: 
      - lint
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Scan current project
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "."
          fail-build: false
          output-format: table

  bearer:
    name: Bearer
    runs-on: ubuntu-latest
    needs: 
      - grype
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Run Report
        id: report
        uses: bearer/bearer-action@v2
        with:
          exit-code: 0

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: 
      # - grype
      - bearer
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: 
      - sonarcloud
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - run: npm run ci
      - run: sudo npm test

  docker:
    name: Docker build and publish
    runs-on: ubuntu-latest
    needs: 
      - tests
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: waltenbergjr/fast-ci-cd:${{ github.event.number == 0 && 'latest' || format('PR-{0}', github.event.number) }}

  deployment:
    name: Deployment trigger
    runs-on: ubuntu-latest
    needs: 
      - docker
    steps:
      - name: Disparar deployment em dev
        uses: benc-uk/workflow-dispatch@v1
        env:
          IMAGE_TAG: ${{ github.event.number == 0 && 'latest' || format('PR-{0}', github.event.number) }}
        with:
          workflow: cd.yml
          inputs: '{ "envronment": "dev", "imageTag": "${{ env.IMAGE_TAG }}" }'
          token: "${{ secrets.TOKEN_GITHUB }}"
